#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require_relative '../lib/thatsmybis_scraper'

def main
  puts "That's My BIS Profile Link Extractor".blue.bold
  
  begin
    # Initialize the roster retriever (uses hard-coded URL by default)
    retriever = ThatsMyBisScraper::RosterRetriever.new
    target_url = retriever.base_url
    
    puts "Testing with hard-coded URL: #{target_url}".green
    
    # Collect profile links specifically
    puts "Collecting profile links...".yellow
    profile_links = retriever.collect_profile_links
    
    # Display results
    puts "\n" + "="*60
    puts "PROFILE LINKS FOUND".blue.bold
    puts "="*60
    puts "Total profile links: #{profile_links.length}".green
    
    if profile_links.any?
      puts "\nProfile Links:".yellow
      profile_links.each_with_index do |link, index|
        puts "#{index + 1}. #{link[:player_name]}".cyan
        puts "   URL: #{link[:url]}".white
        puts "   Profile Text: '#{link[:profile_text]}'".white
        puts "   Has User Icon: #{link[:has_user_icon]}".white
        puts ""
      end
      
      # Save to file
      output_file = "data/profile_links_#{Time.now.strftime('%Y%m%d_%H%M%S')}.json"
      FileUtils.mkdir_p('data') unless Dir.exist?('data')
      
      data = {
        base_url: target_url,
        collected_at: Time.now.iso8601,
        total_profile_links: profile_links.length,
        profile_links: profile_links
      }
      
      File.write(output_file, JSON.pretty_generate(data))
      puts "Profile links saved to: #{output_file}".green
    else
      puts "No profile links found. This might indicate:".red
      puts "  - The page structure is different than expected".yellow
      puts "  - The page requires authentication".yellow
      puts "  - The selectors need to be updated".yellow
    end
    
  rescue ThatsMyBisScraper::Error => e
    puts "Scraper Error: #{e.message}".red
    exit 1
  rescue => e
    puts "Unexpected Error: #{e.message}".red
    puts e.backtrace.first(5).join("\n").red
    exit 1
  end
end

main if __FILE__ == $PROGRAM_NAME
